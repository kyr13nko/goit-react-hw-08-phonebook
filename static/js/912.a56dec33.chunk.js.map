{"version":3,"file":"static/js/912.a56dec33.chunk.js","mappings":"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","sources":["index.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","redux/filter/selectors.js","components/ContactsList/ContactsList.styled.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/ContactsList/ContactsList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 36px;\n\n  width: 400px;\n\n  color: #010101;\n`;\n\nexport const Block = styled.div`\n  box-shadow: 0px 20px 0px -18px rgba(84, 76, 122, 1),\n    0px 18px 0px -16px rgba(57, 95, 58, 1);\n  padding-bottom: 16px;\n`;\n\nexport const Title = styled.h2`\n  text-transform: uppercase;\n  text-align: center;\n\n  margin-bottom: 8px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: 8px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n\n  width: 100%;\n  font-size: 12px;\n`;\n\nexport const Input = styled.input`\n  height: 20px;\n\n  border: 1px solid white;\n  outline: none;\n\n  box-shadow: rgb(84, 76, 122) 1px -1px 0px 1px,\n    rgb(57, 95, 58) -1px 1px 0px 1px;\n\n  &:hover,\n  &:focus {\n    border: 1px solid black;\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  width: 150px;\n  background-color: transparent;\n\n  font-weight: 800;\n\n  border: none;\n  outline: none;\n\n  background-color: white;\n  box-shadow: rgb(84, 76, 122) 1px -1px 0px 1px,\n    rgb(57, 95, 58) -1px 1px 0px 1px;\n  padding: 4px 16px;\n  margin-top: 16px;\n\n  &:hover {\n    color: white;\n    background: linear-gradient(to top right, #395f3a 0%, #544c7a 100%);\n  }\n`;\n","export const getContacts = state => state.contacts.items;\nexport const getError = state => state.contacts.error;\nexport const getIsLoading = state => state.contacts.isLoading;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nimport { Block, Button, Form, Input, Label, Title } from 'index.styled';\n\nconst ContactForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n\n    const formData = new FormData(event.target);\n    const name = formData.get('name');\n    const number = formData.get('number');\n\n    const contactExists = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (contactExists) {\n      toast.error(`\"${name}\" is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    toast.success(`\"${name}\" is now in your contacts`);\n\n    event.target.reset();\n  };\n  return (\n    <Block>\n      <Title>Add new contact:</Title>\n      <Form onSubmit={onFormSubmit}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          Phone\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </Block>\n  );\n};\n\nexport default ContactForm;\n","import { styled } from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n\n  font-size: 12px;\n`;\n\nexport const Input = styled.input`\n  height: 20px;\n\n  border: 1px solid white;\n  outline: none;\n\n  box-shadow: rgb(84, 76, 122) 1px -1px 0px 1px,\n    rgb(57, 95, 58) -1px 1px 0px 1px;\n\n  &:hover,\n  &:focus {\n    border: 1px solid black;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\n\nimport { Input, Label } from './Filter.styled';\nimport { Block, Title } from 'index.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilterChange = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <Block>\n      <Title>Find contact:</Title>\n      <Label>\n        Find contacts by name\n        <Input type=\"text\" name=\"filter\" onInput={onFilterChange} />\n      </Label>\n    </Block>\n  );\n};\n\nexport default Filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { getContacts } from 'redux/contacts/selectors';\n\nexport const getFilter = state => state.filter.filter;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) =>\n    contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n","import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  gap: 20px;\n\n  border-bottom: 2px solid rgb(84, 76, 122);\n\n  &:nth-child(2n) {\n    border-bottom: 2px solid rgb(57, 95, 58);\n  }\n`;\n\nexport const ContactValue = styled.p`\n  display: flex;\n  justify-content: space-between;\n\n  width: 400px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n\n  font-weight: 800;\n\n  border: none;\n  outline: none;\n\n  background-color: white;\n  box-shadow: rgb(84, 76, 122) 1px -1px 0px 1px,\n    rgb(57, 95, 58) -1px 1px 0px 1px;\n  padding: 4px 16px;\n\n  &:hover {\n    color: white;\n    background: linear-gradient(to top right, #395f3a 0%, #544c7a 100%);\n  }\n`;\n","import { styled } from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { RevolvingDot } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderWrapper>\n      <RevolvingDot\n        radius=\"24\"\n        strokeWidth=\"8\"\n        color=\"rgb(57, 95, 58)\"\n        secondaryColor=\"rgb(84, 76, 122)\"\n        ariaLabel=\"revolving-dot-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </LoaderWrapper>\n  );\n};\n\nexport default Loader;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { deleteContact } from 'redux/contacts/operations';\nimport { getContacts, getError, getIsLoading } from 'redux/contacts/selectors';\nimport { getFilter, getFilteredContacts } from 'redux/filter/selectors';\n\nimport { toast } from 'react-toastify';\n\nimport { List, Item, ContactValue, Button } from './ContactsList.styled';\nimport Loader from 'components/Loader/Loader';\nimport { Block, Title } from 'index.styled';\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const filteredContacts = useSelector(getFilteredContacts);\n  const error = useSelector(getError);\n  const isLoading = useSelector(getIsLoading);\n\n  const onDeleteBtnClick = id => {\n    dispatch(deleteContact(id));\n    toast.success('Contact deleted!');\n  };\n\n  return (\n    <Block>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {!error && contacts.length > 0 && (\n            <>\n              <Title>Contacts:</Title>\n              <List>\n                {filteredContacts.map(({ id, name, number }) => {\n                  return (\n                    <Item key={id}>\n                      <ContactValue>\n                        {name}\n                        <span>{number}</span>\n                      </ContactValue>\n                      <Button\n                        type=\"button\"\n                        onClick={() => onDeleteBtnClick(id)}\n                      >\n                        Delete\n                      </Button>\n                    </Item>\n                  );\n                })}\n              </List>\n            </>\n          )}\n\n          {!error && contacts.length === 0 && (\n            <div>Your phone book is empty!</div>\n          )}\n\n          {filter && filteredContacts.length === 0 && (\n            <div>\n              No contacts found! <br /> Please change your search parameters and\n              try again.\n            </div>\n          )}\n\n          {error && (\n            <div>\n              Something went wrong. <br />\n              Please try again later.\n            </div>\n          )}\n        </>\n      )}\n    </Block>\n  );\n};\n\nexport default ContactsList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactsList from 'components/ContactsList/ContactsList';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nimport { Container } from 'index.styled';\nimport { getContacts } from 'redux/contacts/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Container>\n        <ContactForm />\n        {contacts.length > 0 && <Filter />}\n        <ContactsList />\n      </Container>\n      <ToastContainer autoClose={3000} theme=\"colored\" />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Block","_templateObject2","Title","_templateObject3","Form","_templateObject4","Label","_templateObject5","Input","_templateObject6","Button","_templateObject7","getContacts","state","contacts","items","getError","error","getIsLoading","isLoading","useSelector","dispatch","useDispatch","_jsxs","children","_jsx","onSubmit","event","preventDefault","formData","FormData","target","name","get","number","some","contact","toLowerCase","toast","concat","addContact","reset","type","pattern","title","required","onInput","_ref","value","setFilter","getFilter","filter","getFilteredContacts","createSelector","includes","List","Item","ContactValue","LoaderWrapper","RevolvingDot","radius","strokeWidth","color","secondaryColor","ariaLabel","wrapperStyle","wrapperClass","visible","filteredContacts","Loader","_Fragment","length","map","id","onClick","deleteContact","onDeleteBtnClick","useEffect","fetchContacts","ContactForm","Filter","ContactsList","ToastContainer","autoClose","theme"],"sourceRoot":""}